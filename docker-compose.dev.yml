version: '3.3'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: irrexplorer-db-dev
    environment:
      POSTGRES_DB: irrexplorer
      POSTGRES_USER: irrexplorer
      POSTGRES_PASSWORD: irrexplorer_password
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U irrexplorer"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - irrexplorer-network

  # Backend API (Development mode with hot reload)
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: irrexplorer-backend-dev
    environment:
      DATABASE_URL: postgresql://irrexplorer:irrexplorer_password@db:5432/irrexplorer
      IRRD_ENDPOINT: ${IRRD_ENDPOINT:-https://irrd.nlnog.net/graphql}
      DEBUG: "True"
      ALLOWED_ORIGINS: "*"
      BGP_SOURCE: ${BGP_SOURCE:-https://bgp.tools/table.jsonl}
      BGP_SOURCE_MINIMUM_HITS: ${BGP_SOURCE_MINIMUM_HITS:-20}
      HTTP_PORT: 8000
      HTTP_WORKERS: 1
    depends_on:
      - db
    ports:
      - "8000:8000"
    volumes:
      - ./irrexplorer:/app/irrexplorer
      - ./alembic.ini:/app/alembic.ini
    command: ["sh", "-c", "alembic upgrade head && uvicorn irrexplorer.app:app --host 0.0.0.0 --port 8000 --reload"]
    networks:
      - irrexplorer-network

  # Frontend (Development mode with hot reload)
  frontend:
    image: node:18-alpine
    container_name: irrexplorer-frontend-dev
    working_dir: /app
    environment:
      REACT_APP_BACKEND: http://localhost:8000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    command: ["sh", "-c", "yarn install && yarn start"]
    networks:
      - irrexplorer-network
    stdin_open: true
    tty: true

volumes:
  postgres_data_dev:
    driver: local

networks:
  irrexplorer-network:
    driver: bridge
